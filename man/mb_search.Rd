% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mb_search.R
\name{mb_search}
\alias{mb_search}
\title{Search MusicBrainz}
\usage{
mb_search(type, query, limit = NULL, offset = NULL)
}
\arguments{
\item{type}{Selects the index to be searched, artist, release, release-group,
recording, work, label (track is supported but maps to recording)}

\item{query}{Lucene search query, this is mandatory. The query field supports
the full Lucene Search syntax; you can find a detailed guide at \href{https://lucene.apache.org/core/4_3_0/queryparser/org/apache/lucene/queryparser/classic/package-summary.html#package_description}{Lucene Search syntax}.
For example, you can set conditions while searching for a name with the
AND operator.}

\item{limit}{An integer value defining how many entries should be returned.
Only values between 1 and 100 (both inclusive) are allowed. If not given,
this defaults to 25.}

\item{offset}{Return search results starting at a given offset. Used for paging
through more than one page of results.}
}
\value{
a list with data from the API
}
\description{
Search MusicBrainz
}
\examples{

\dontrun{

# Annotation
annotation_data <- mb_search("annotation", "entity:bdb24cb5-404b-4f60-bba4-7b730325ae47")

# Area
area_data <- mb_search("area", 'query="ÃŽle-de-France"')

# Artist
artist_data <- mb_search("artist", "artist:fred AND type:group AND country:US")

# CDStub
cdstub_data <- mb_search("cdstub", "title:Doo")

# Label
label_data <- mb_search("label", "Devil's Records")

# Place
place_data <- mb_search("place", "chipping")

# Recording
recording_data <- mb_search("recording", "isrc:GBAHT1600302")

# Release Group
release_group_data <- mb_search("release-group", "release:Tenance")

# Release
release_data <- mb_search("release", "release:Schneider AND Shake")

# Work
work_data <- mb_search("work", "work:Frozen AND arid:4c006444-ccbf-425e-b3e7-03a98bab5997")

}
}
\seealso{
\href{https://musicbrainz.org/doc/Development/XML_Web_Service/Version_2/Search}{MusicBrainz Search}
}
